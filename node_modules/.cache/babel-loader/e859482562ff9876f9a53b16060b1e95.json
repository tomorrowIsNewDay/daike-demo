{"remainingRequest":"/Users/apple/BOKE/daike-demo/node_modules/babel-loader/lib/index.js!/Users/apple/BOKE/daike-demo/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/apple/BOKE/daike-demo/src/http/api.js","dependencies":[{"path":"/Users/apple/BOKE/daike-demo/src/http/api.js","mtime":1565008682000},{"path":"/Users/apple/BOKE/daike-demo/node_modules/cache-loader/dist/cjs.js","mtime":1561020502000},{"path":"/Users/apple/BOKE/daike-demo/node_modules/babel-loader/lib/index.js","mtime":1561020497000},{"path":"/Users/apple/BOKE/daike-demo/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1564662313000}],"contextDependencies":[],"result":["/**\n * @author leeming\n * @date 2019/8/5 下午7:59:30\n * @description 封装axios\n */\nimport axios from 'axios';\nimport baseconfig from \"./config\";\nimport qs from 'qs'; // 创建axios实例\n\nvar api = axios.create({\n  baseURL: baseconfig.baseURL,\n  headers: {},\n  transformResponse: [function (data) {\n    return data;\n  }]\n}); // 设置拦截器\n\napi.interceptors.request.use(function (config) {\n  // 加上loading\n  // 验证 token\n  // 根据请求方法，处理参数（序列化）\n  if (!config.headers['Content-Type']) {\n    config.headers['Content-Type'] = baseconfig.headers;\n  }\n\n  config.headers['my-token'] = 'sfjoasjdfoijsdfiojsiodfjio';\n\n  if (config.method === 'get' || config.method === 'GET') {\n    config.url = config.url + '?' + config.data + '&_t=' + new Date().getTime();\n  }\n\n  if (config.method.toLocaleLowerCase() === 'post' || config.method.toLocaleLowerCase() === 'put' || config.method.toLocaleLowerCase() === 'delete') {\n    config.data = qs.stringify(config.data);\n  }\n\n  return config;\n}, function (error) {\n  // 关闭loading\n  // 处理错误情况，重定向\n  return Promise.reject(error);\n});\napi.interceptors.response.use(function (response) {\n  // 根据response.data.code 来做不同的处理\n  return response;\n}, function (err) {\n  // 处理错误情况\n  // err.response.status \n  return Promise.reject(err);\n});\nexport default api;",{"version":3,"sources":["/Users/apple/BOKE/daike-demo/src/http/api.js"],"names":["axios","baseconfig","qs","api","create","baseURL","headers","transformResponse","data","interceptors","request","use","config","method","url","Date","getTime","toLocaleLowerCase","stringify","error","Promise","reject","response","err"],"mappings":"AAAA;;;;;AAMA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP;AACA,OAAOC,EAAP,MAAe,IAAf,C,CAEA;;AACA,IAAMC,GAAG,GAAGH,KAAK,CAACI,MAAN,CAAa;AACrBC,EAAAA,OAAO,EAAEJ,UAAU,CAACI,OADC;AAErBC,EAAAA,OAAO,EAAE,EAFY;AAGrBC,EAAAA,iBAAiB,EAAE,CAAC,UAAUC,IAAV,EAAe;AAAC,WAAOA,IAAP;AAAY,GAA7B;AAHE,CAAb,CAAZ,C,CAMA;;AACAL,GAAG,CAACM,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CAA6B,UAAAC,MAAM,EAAE;AACjC;AACA;AACA;AACA,MAAG,CAACA,MAAM,CAACN,OAAP,CAAe,cAAf,CAAJ,EAAoC;AAChCM,IAAAA,MAAM,CAACN,OAAP,CAAe,cAAf,IAAiCL,UAAU,CAACK,OAA5C;AACH;;AACDM,EAAAA,MAAM,CAACN,OAAP,CAAe,UAAf,IAA6B,4BAA7B;;AAEA,MAAIM,MAAM,CAACC,MAAP,KAAkB,KAAlB,IAA2BD,MAAM,CAACC,MAAP,KAAkB,KAAjD,EAAyD;AACrDD,IAAAA,MAAM,CAACE,GAAP,GAAaF,MAAM,CAACE,GAAP,GAAa,GAAb,GAAmBF,MAAM,CAACJ,IAA1B,GAAiC,MAAjC,GAA0C,IAAIO,IAAJ,GAAWC,OAAX,EAAvD;AACH;;AAED,MAAIJ,MAAM,CAACC,MAAP,CAAcI,iBAAd,OAAsC,MAAtC,IACAL,MAAM,CAACC,MAAP,CAAcI,iBAAd,OAAsC,KADtC,IAEAL,MAAM,CAACC,MAAP,CAAcI,iBAAd,OAAsC,QAF1C,EAGE;AACEL,IAAAA,MAAM,CAACJ,IAAP,GAAcN,EAAE,CAACgB,SAAH,CAAaN,MAAM,CAACJ,IAApB,CAAd;AACH;;AACD,SAAOI,MAAP;AACH,CApBD,EAoBG,UAAAO,KAAK,EAAE;AACN;AACA;AAEA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAzBD;AA2BAhB,GAAG,CAACM,YAAJ,CAAiBa,QAAjB,CAA0BX,GAA1B,CAA8B,UAAAW,QAAQ,EAAE;AACpC;AACA,SAAOA,QAAP;AACH,CAHD,EAGG,UAAAC,GAAG,EAAI;AACN;AACA;AACA,SAAOH,OAAO,CAACC,MAAR,CAAeE,GAAf,CAAP;AACH,CAPD;AASA,eAAepB,GAAf","sourcesContent":["/**\n * @author leeming\n * @date 2019/8/5 下午7:59:30\n * @description 封装axios\n */\n\nimport axios from 'axios'\nimport baseconfig from './config'\nimport qs from 'qs'\n\n// 创建axios实例\nconst api = axios.create({\n    baseURL: baseconfig.baseURL,\n    headers: {},\n    transformResponse: [function (data){return data}]\n})\n\n// 设置拦截器\napi.interceptors.request.use(config=>{\n    // 加上loading\n    // 验证 token\n    // 根据请求方法，处理参数（序列化）\n    if(!config.headers['Content-Type']) {\n        config.headers['Content-Type'] = baseconfig.headers\n    }\n    config.headers['my-token'] = 'sfjoasjdfoijsdfiojsiodfjio'\n\n    if( config.method === 'get' || config.method === 'GET' ) {\n        config.url = config.url + '?' + config.data + '&_t=' + new Date().getTime()\n    }\n\n    if( config.method.toLocaleLowerCase() === 'post' ||\n        config.method.toLocaleLowerCase() === 'put' ||\n        config.method.toLocaleLowerCase() === 'delete'\n    ) {\n        config.data = qs.stringify(config.data)\n    }\n    return config\n}, error=>{\n    // 关闭loading\n    // 处理错误情况，重定向\n\n    return Promise.reject(error)\n})\n\napi.interceptors.response.use(response=>{\n    // 根据response.data.code 来做不同的处理\n    return response\n}, err => {\n    // 处理错误情况\n    // err.response.status \n    return Promise.reject(err)\n})\n\nexport default api"]}]}